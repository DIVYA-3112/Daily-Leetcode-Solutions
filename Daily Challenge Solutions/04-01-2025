// https://leetcode.com/problems/unique-length-3-palindromic-subsequences/description/?envType=daily-question&envId=2025-01-04

// Quetion Name - unique-length-3-palindromic-subsequences

// Solution

class Solution {
public:
    int countPalindromicSubsequence(string s) {
        vector<int> first(26,-1), last(26,-1);
        int n = s.size();
        for(int i=0; i<n; i++)
        {
            v[s[i]-'a'].push_back(i);
        }

        int ans = 0;
        for(int i=0; i<26; i++)
        {
            int k = v[i].size();
            if(k >= 2)
            {
                int start = v[i][0];
                int end = v[i][k-1];
                vector<int> temp(26,0);
                for(int i=start+1; i<end; i++)
                {
                    if(temp[s[i]-'a'] == 0)
                    {
                        ans++;
                    }
                    temp[s[i] - 'a'] = 1;
                }
            }
        }
        return ans;
    }
};
